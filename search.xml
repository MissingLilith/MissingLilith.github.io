<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>《摇曳露营△》第二季表情包 第2弹</title>
      <link href="/2021/06/24/yyly-bqb2/"/>
      <url>/2021/06/24/yyly-bqb2/</url>
      
        <content type="html"><![CDATA[<h2 id="继续搬运表情包，嘿嘿"><a href="#继续搬运表情包，嘿嘿" class="headerlink" title="继续搬运表情包，嘿嘿~~"></a>继续搬运表情包，嘿嘿~~</h2><hr><blockquote><p>UP： <a href="https://space.bilibili.com/17073487">猫-ちゃん</a><br>出处： <a href="https://www.bilibili.com/read/cv11093377">bilibili.com</a></p></blockquote><hr><p>大家五一劳动节快乐！话不多说直接上图！ 作者：猫-ちゃん <a href="https://www.bilibili.com/read/cv11093377">https://www.bilibili.com/read/cv11093377</a> 出处：bilibili</p><p><img src="https://cdn.jsdelivr.net/gh/MissingLilith/Image-Hosting-Service/yurucamp/2.2.1.png" alt="你被抚子发现了！"><br><img src="https://cdn.jsdelivr.net/gh/MissingLilith/Image-Hosting-Service/yurucamp/2.2.2.png" alt="你被抚子发现了！"><br><img src="https://cdn.jsdelivr.net/gh/MissingLilith/Image-Hosting-Service/yurucamp/2.2.3.png" alt="好耶"><br><img src="https://cdn.jsdelivr.net/gh/MissingLilith/Image-Hosting-Service/yurucamp/2.2.4.png" alt="（ •̀ ω •́ )y"><br>![（❁´◡`❁）](<a href="https://cdn.jsdelivr.net/gh/MissingLilith/Image-Hosting-Service/yurucamp/2.2.5.png">https://cdn.jsdelivr.net/gh/MissingLilith/Image-Hosting-Service/yurucamp/2.2.5.png</a>)<br><img src="https://cdn.jsdelivr.net/gh/MissingLilith/Image-Hosting-Service/yurucamp/2.2.6.png" alt="哦？"><br><img src="https://cdn.jsdelivr.net/gh/MissingLilith/Image-Hosting-Service/yurucamp/2.2.7.png" alt="啊这（⊙_⊙;）"><br><img src="https://cdn.jsdelivr.net/gh/MissingLilith/Image-Hosting-Service/yurucamp/2.2.8.png" alt="（⊙o⊙)? "><br><img src="https://cdn.jsdelivr.net/gh/MissingLilith/Image-Hosting-Service/yurucamp/2.2.9.png" alt="w(ﾟДﾟ)w"><br><img src="https://cdn.jsdelivr.net/gh/MissingLilith/Image-Hosting-Service/yurucamp/2.2.10.png" alt="（ •̀ ω •́ )y "></p><hr><blockquote><p>UP： <a href="https://space.bilibili.com/17073487">猫-ちゃん</a><br>出处： <a href="https://www.bilibili.com/read/cv11093377">bilibili.com</a></p></blockquote><hr>]]></content>
      
      
      <categories>
          
          <category> 搬运 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 摇曳露营 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>微信公众号机器人</title>
      <link href="/2021/06/24/werobot/"/>
      <url>/2021/06/24/werobot/</url>
      
        <content type="html"><![CDATA[<p>我的第一个微信公众号开通啦！当然是为了学习的~</p><blockquote><p>其实就是Python课程设计</p></blockquote><p>公众号取名为：</p><h2 id="KanoChyan"><a href="#KanoChyan" class="headerlink" title="KanoChyan"></a>KanoChyan</h2><p><a href="https://github.com/MissingLilith/Wechat-Robot">项目地址</a><br>我主要使用了 WeRoBot 一个微信机器人框架 [<a href="https://github.com/daqing15/WeRoBot">github</a>]</p><h3 id="订阅自动回复"><a href="#订阅自动回复" class="headerlink" title="订阅自动回复"></a>订阅自动回复</h3><pre class=" language-bash"><code class="language-bash">@robot.subscribedef subscribe<span class="token punctuation">(</span><span class="token punctuation">)</span>:    <span class="token keyword">return</span> <span class="token string">"***欢迎关注KanoChyan[愉快][愉快][愉快]***\n"</span> \           <span class="token string">"-->输入任意内容开始与我聊天！\n"</span> \           <span class="token string">"-->输入'博客'关注我的博客！\n"</span> \           <span class="token string">"-->输入'音乐'为小主送上舒缓的歌曲！\n"</span> \           <span class="token string">"-->输入'天气'告诉你最近的天气情况！\n"</span> \           <span class="token string">"-->输入'图片'来随机一张二次元图吧！\n"</span> \           <span class="token string">"-->输入'笑话'或'段子'给你讲一段笑话！\n"</span> \           <span class="token string">"-->输入'邀请'邀请你的好朋友来关注我吧！\n"</span> \           <span class="token string">"-->输入'帮助'或'？'可再次显示此信息\n"</span></code></pre><blockquote><p>从上面也能看出我实现了那些功能模块（虽然有些并不怎么好</p></blockquote><h3 id="博客分享（就是你现在看的东西啦"><a href="#博客分享（就是你现在看的东西啦" class="headerlink" title="博客分享（就是你现在看的东西啦"></a>博客分享（就是你现在看的东西啦</h3><pre class=" language-bash"><code class="language-bash">@robot.filter<span class="token punctuation">(</span><span class="token string">'博客'</span>, <span class="token string">'blog'</span><span class="token punctuation">)</span>def blog<span class="token punctuation">(</span>message<span class="token punctuation">)</span>:    reply <span class="token operator">=</span> ArticlesReply<span class="token punctuation">(</span>message<span class="token operator">=</span>message<span class="token punctuation">)</span>    article <span class="token operator">=</span> Article<span class="token punctuation">(</span>        title<span class="token operator">=</span><span class="token string">"ねこちゃんの小站"</span>,        description<span class="token operator">=</span><span class="token string">"ねこちゃんの个人博客"</span>,        img<span class="token operator">=</span><span class="token string">"https://cdn.jsdelivr.net/gh/MissingLilith/Image-Hosting-Service/qrcode_missinglilith.github.io.png"</span>,        url<span class="token operator">=</span><span class="token string">"https://missinglilith.github.io/"</span>    <span class="token punctuation">)</span>    reply.add_article<span class="token punctuation">(</span>article<span class="token punctuation">)</span>    <span class="token keyword">return</span> reply</code></pre><blockquote><p>当微信号收到用户输入‘博客’等关键词就会回复我的博客链接啦</p></blockquote><h3 id="图片接收"><a href="#图片接收" class="headerlink" title="图片接收"></a>图片接收</h3><pre class=" language-bash"><code class="language-bash">@robot.imagedef blog<span class="token punctuation">(</span>message, session<span class="token punctuation">)</span>:    <span class="token comment" spellcheck="true"># print("msg", message.img)</span>    <span class="token comment" spellcheck="true"># print(type(message))</span>    <span class="token comment" spellcheck="true"># print(type(message.img))</span>    <span class="token comment" spellcheck="true"># print(message.__dict__)</span>    print<span class="token punctuation">(</span><span class="token string">"\n"</span> + message.MediaId<span class="token punctuation">)</span>    changdu <span class="token operator">=</span> str<span class="token punctuation">(</span>len<span class="token punctuation">(</span>session<span class="token punctuation">))</span>    session<span class="token punctuation">[</span>changdu<span class="token punctuation">]</span> <span class="token operator">=</span> message.MediaId    reply <span class="token operator">=</span> ImageReply<span class="token punctuation">(</span>message<span class="token operator">=</span>message, media_id<span class="token operator">=</span>message.MediaId<span class="token punctuation">)</span>    <span class="token keyword">return</span> reply</code></pre><blockquote><p>这段代码没怎么动，把用户发送的图片原封不动地发回去</p></blockquote><h3 id="音乐发送"><a href="#音乐发送" class="headerlink" title="音乐发送"></a>音乐发送</h3><pre class=" language-bash"><code class="language-bash">def music_data<span class="token punctuation">(</span><span class="token punctuation">)</span>:    music_list <span class="token operator">=</span> <span class="token punctuation">[</span>        <span class="token punctuation">[</span><span class="token string">'童话镇'</span>, <span class="token string">'陈一发儿'</span>, <span class="token string">'https://e.coka.la/wlae62.mp3'</span>, <span class="token string">'https://e.coka.la/wlae62.mp3'</span><span class="token punctuation">]</span>,        <span class="token punctuation">[</span><span class="token string">'都选C'</span>, <span class="token string">'缝纫机乐队'</span>, <span class="token string">'https://files.catbox.moe/duefwe.mp3'</span>, <span class="token string">'https://files.catbox.moe/duefwe.mp3'</span><span class="token punctuation">]</span>,        <span class="token punctuation">[</span><span class="token string">'精彩才刚刚开始'</span>, <span class="token string">'易烊千玺'</span>, <span class="token string">'https://e.coka.la/PdqQMY.mp3'</span>, <span class="token string">'https://e.coka.la/PdqQMY.mp3'</span><span class="token punctuation">]</span>    <span class="token punctuation">]</span>    num <span class="token operator">=</span> random.randint<span class="token punctuation">(</span>0, 2<span class="token punctuation">)</span>    <span class="token keyword">return</span> music_list<span class="token punctuation">[</span>num<span class="token punctuation">]</span></code></pre><pre class=" language-bash"><code class="language-bash">@robot.filter<span class="token punctuation">(</span>re.compile<span class="token punctuation">(</span><span class="token string">".*?音乐.*?"</span><span class="token punctuation">)</span>, re.compile<span class="token punctuation">(</span><span class="token string">".*?歌曲.*?"</span><span class="token punctuation">)</span>, <span class="token string">'music'</span><span class="token punctuation">)</span>def music<span class="token punctuation">(</span>message<span class="token punctuation">)</span>:    <span class="token comment" spellcheck="true"># reply = TextReply(message=message, content=music_data())</span>    <span class="token comment" spellcheck="true"># reply = MusicReply(message=message,source='https://www.kugou.com/song/#hash=D4EB517A405FCDF0286AA9A4487BBCE1&amp;album_id=10409377')</span>    <span class="token keyword">return</span> music_data<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token comment" spellcheck="true"># return reply</span></code></pre><blockquote><p>当公众号收到关键词或包含关键词的文字就会从上面随机一首歌发送<br>(实在太懒不想多加几首歌</p></blockquote><h3 id="随机段子"><a href="#随机段子" class="headerlink" title="随机段子"></a>随机段子</h3><pre class=" language-bash"><code class="language-bash">@robot.filter<span class="token punctuation">(</span>re.compile<span class="token punctuation">(</span><span class="token string">".*?笑话.*?"</span><span class="token punctuation">)</span>, re.compile<span class="token punctuation">(</span><span class="token string">".*?段子.*?"</span><span class="token punctuation">)</span>, <span class="token string">'joke'</span><span class="token punctuation">)</span>def get_joke<span class="token punctuation">(</span><span class="token punctuation">)</span>:    url <span class="token operator">=</span> <span class="token string">"http://www.qiushibaike.com/text/page/"</span> + str<span class="token punctuation">(</span>random.randint<span class="token punctuation">(</span>1, 5<span class="token punctuation">))</span>    r <span class="token operator">=</span> requests.get<span class="token punctuation">(</span>url<span class="token punctuation">)</span>    tree <span class="token operator">=</span> etree.HTML<span class="token punctuation">(</span>r.text<span class="token punctuation">)</span>    contentlist <span class="token operator">=</span> tree.xpath<span class="token punctuation">(</span><span class="token string">'//div[@class="content"]/span'</span><span class="token punctuation">)</span>    jokes <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>    <span class="token keyword">for</span> content <span class="token keyword">in</span> contentlist:        content <span class="token operator">=</span> content.xpath<span class="token punctuation">(</span><span class="token string">'string(.)'</span><span class="token punctuation">)</span>  <span class="token comment" spellcheck="true"># string() 函数将所有子文本串联起来，# 必须传递单个节点，而不是节点集。</span>        <span class="token keyword">if</span> <span class="token string">'查看全文'</span> <span class="token keyword">in</span> content:  <span class="token comment" spellcheck="true"># 忽略包含“查看原文”笑话</span>            <span class="token keyword">continue</span>        jokes.append<span class="token punctuation">(</span>content<span class="token punctuation">)</span>    joke <span class="token operator">=</span> jokes<span class="token punctuation">[</span>random.randint<span class="token punctuation">(</span>1, len<span class="token punctuation">(</span>jokes<span class="token punctuation">))</span><span class="token punctuation">]</span>.strip<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> <span class="token string">"讲个段子：\n"</span> + joke</code></pre><blockquote><p>段子哪里来？从网站爬的，随便来一段呗</p></blockquote><h3 id="天气查询"><a href="#天气查询" class="headerlink" title="天气查询"></a>天气查询</h3><pre class=" language-bash"><code class="language-bash">@robot.filter<span class="token punctuation">(</span>re.compile<span class="token punctuation">(</span><span class="token string">".*?天气.*?"</span><span class="token punctuation">)</span>, <span class="token string">'weather'</span><span class="token punctuation">)</span>def weather<span class="token punctuation">(</span><span class="token punctuation">)</span>:    url <span class="token operator">=</span> <span class="token string">'http://wthrcdn.etouch.cn/weather_mini?city=武汉'</span>    f <span class="token operator">=</span> requests.get<span class="token punctuation">(</span>url<span class="token punctuation">)</span>    <span class="token comment" spellcheck="true"># print(f.text)</span>    jsons <span class="token operator">=</span> json.loads<span class="token punctuation">(</span>f.text<span class="token punctuation">)</span>    <span class="token comment" spellcheck="true"># print(jsons['data']['forecast'])</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> jsons<span class="token punctuation">[</span><span class="token string">'data'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'forecast'</span><span class="token punctuation">]</span>:        <span class="token keyword">return</span> <span class="token string">"武汉天气：\n"</span> + i<span class="token punctuation">[</span><span class="token string">'date'</span><span class="token punctuation">]</span> + <span class="token string">"\n"</span> + i<span class="token punctuation">[</span><span class="token string">'type'</span><span class="token punctuation">]</span> + <span class="token string">"\t"</span> + i<span class="token punctuation">[</span><span class="token string">'fengxiang'</span><span class="token punctuation">]</span> + <span class="token string">"\n"</span> + i<span class="token punctuation">[</span><span class="token string">'high'</span><span class="token punctuation">]</span> + i<span class="token punctuation">[</span><span class="token string">'low'</span><span class="token punctuation">]</span></code></pre><blockquote><p>天气数据哪里来，还不网上找<br>我就只查武汉的天气，略略略（要实现指定城市查询以后再说吧</p></blockquote><h3 id="随机图片"><a href="#随机图片" class="headerlink" title="随机图片"></a>随机图片</h3><pre class=" language-bash"><code class="language-bash">def picture<span class="token punctuation">(</span>message<span class="token punctuation">)</span>:    num <span class="token operator">=</span> random.randint<span class="token punctuation">(</span>1, 40<span class="token punctuation">)</span>    reply <span class="token operator">=</span> ArticlesReply<span class="token punctuation">(</span>message<span class="token operator">=</span>message<span class="token punctuation">)</span>    article <span class="token operator">=</span> Article<span class="token punctuation">(</span>        title<span class="token operator">=</span><span class="token string">"随机图片"</span>,        description<span class="token operator">=</span><span class="token string">"KanoChyan的图库"</span>,        img<span class="token operator">=</span><span class="token string">"https://cdn.jsdelivr.net/gh/MissingLilith/Image-Hosting-Service/wx/{}.png"</span>.format<span class="token punctuation">(</span>num<span class="token punctuation">)</span>,        url<span class="token operator">=</span><span class="token string">"https://cdn.jsdelivr.net/gh/MissingLilith/Image-Hosting-Service/wx/{}.png"</span>.format<span class="token punctuation">(</span>num<span class="token punctuation">)</span>    <span class="token punctuation">)</span>    reply.add_article<span class="token punctuation">(</span>article<span class="token punctuation">)</span>    <span class="token keyword">return</span> reply</code></pre><blockquote><p>图片从我的图床随机选的，暂时就这么多，问就是懒得传</p></blockquote><h3 id="其他功能"><a href="#其他功能" class="headerlink" title="其他功能"></a>其他功能</h3><p>其他乱七八糟的聊天啥的，其实就是关键词自动回复，学习非要实现一个啥 正话反说 的功能，不就把字反过来嘛，非关键字机器人会反过来发回去，结果会导致发送一些东西回复变了样</p><pre class=" language-bash"><code class="language-bash">@robot.filter<span class="token punctuation">(</span>re.compile<span class="token punctuation">(</span><span class="token string">".*?你好.*?"</span><span class="token punctuation">)</span>, <span class="token string">'Hi'</span>, <span class="token string">'hi'</span>, <span class="token string">'Hello'</span>, <span class="token string">'hello'</span>, <span class="token string">'嗨'</span><span class="token punctuation">)</span>def hello<span class="token punctuation">(</span><span class="token punctuation">)</span>:    <span class="token keyword">return</span> <span class="token string">"你好！这里是KanoChyan！来和我玩吧~"</span>@robot.filter<span class="token punctuation">(</span><span class="token string">'bye'</span>, <span class="token string">'再见'</span>, <span class="token string">'拜拜'</span><span class="token punctuation">)</span>def bye<span class="token punctuation">(</span><span class="token punctuation">)</span>:    <span class="token keyword">return</span> <span class="token string">"再见！下次再来玩吧~"</span>@robot.filter<span class="token punctuation">(</span><span class="token string">'help'</span>, <span class="token string">'?'</span>, <span class="token string">'？'</span>, <span class="token string">'帮助'</span><span class="token punctuation">)</span>def help<span class="token punctuation">(</span><span class="token punctuation">)</span>:    <span class="token keyword">return</span> <span class="token string">"***欢迎关注KanoChyan[愉快][愉快][愉快]***\n"</span> \           <span class="token string">"-->输入任意内容开始与我聊天！\n"</span> \           <span class="token string">"-->输入'博客'关注我的博客！\n"</span> \           <span class="token string">"-->输入'音乐'为小主送上舒缓的歌曲！\n"</span> \           <span class="token string">"-->输入'天气'告诉你最近的天气情况！\n"</span> \           <span class="token string">"-->输入'图片'来随机一张二次元图吧！\n"</span> \           <span class="token string">"-->输入'笑话'或'段子'给你讲一段笑话！\n"</span> \           <span class="token string">"-->输入'邀请'邀请你的好朋友来关注我吧！\n"</span> \           <span class="token string">"-->输入'帮助'或'？'可再次显示此信息\n"</span>@robot.textdef replay<span class="token punctuation">(</span>msg<span class="token punctuation">)</span>:    <span class="token comment" spellcheck="true"># print(msg.content)</span>    <span class="token comment" spellcheck="true"># curtime = time.strftime('%Y-%m-%d %H:%M:%S', time.localtime(time.time()))</span>    <span class="token comment" spellcheck="true"># response = get_response(msg.content)</span>    <span class="token comment" spellcheck="true"># print(</span>    <span class="token comment" spellcheck="true">#     curtime + '  公众号(机器人)' + ':' + response)</span>    <span class="token comment" spellcheck="true"># return response</span>    <span class="token keyword">return</span> msg.content<span class="token punctuation">[</span>::-1<span class="token punctuation">]</span></code></pre><h3 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h3><p>机器人总得动起来吧</p><pre class=" language-bash"><code class="language-bash">robot.config<span class="token punctuation">[</span><span class="token string">'HOST'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">'0.0.0.0'</span>robot.config<span class="token punctuation">[</span><span class="token string">'PORT'</span><span class="token punctuation">]</span> <span class="token operator">=</span> 80robot.run<span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre><p>还有需要import的东西，接上微信别忘了token</p><pre class=" language-bash"><code class="language-bash"><span class="token function">import</span> json<span class="token function">import</span> random<span class="token function">import</span> re<span class="token function">import</span> <span class="token function">time</span><span class="token function">import</span> requests<span class="token function">import</span> werobotfrom lxml <span class="token function">import</span> etreefrom werobot.replies <span class="token function">import</span> ArticlesReply, Article, ImageReply, TextReply, MusicReplyrobot <span class="token operator">=</span> werobot.WeRoBot<span class="token punctuation">(</span>token<span class="token operator">=</span><span class="token string">'******'</span><span class="token punctuation">)</span></code></pre><p>微信公众号就只能用80端口。。。<br>吐槽微信封了好多url，害我试了半天还以为是代码写错了。。。</p><blockquote><p>本人Python写的少，有不足还请理解，以后慢慢学嘛~~~<br>最后再附上<a href="https://github.com/MissingLilith/Wechat-Robot">项目地址</a>，源码都在里面</p></blockquote>]]></content>
      
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>《摇曳露营△》第二季表情包</title>
      <link href="/2021/06/08/yyly-bqb/"/>
      <url>/2021/06/08/yyly-bqb/</url>
      
        <content type="html"><![CDATA[<h2 id="搬运一下在B站发过的表情包，嘻嘻"><a href="#搬运一下在B站发过的表情包，嘻嘻" class="headerlink" title="搬运一下在B站发过的表情包，嘻嘻~~"></a>搬运一下在B站发过的表情包，嘻嘻~~</h2><p>看完了好想去露营呀~~~</p><p>心血来潮自己制作了一些表情包，全部都是手工抠图（抠了老久了），自己收藏同时也分享给大家！<br>UP：<a href="https://space.bilibili.com/17073487">猫-ちゃん</a><br>出处： <a href="https://www.bilibili.com/read/cv11073485/">bilibili.com</a><br><img src="https://cdn.jsdelivr.net/gh/MissingLilith/Image-Hosting-Service/yurucamp/2.1.9.png" alt="结尾图"><br><img src="https://cdn.jsdelivr.net/gh/MissingLilith/Image-Hosting-Service/yurucamp/2.1.10.png" alt="结尾图"><br><img src="https://cdn.jsdelivr.net/gh/MissingLilith/Image-Hosting-Service/yurucamp/2.1.11.png" alt="结尾图"><br><img src="https://cdn.jsdelivr.net/gh/MissingLilith/Image-Hosting-Service/yurucamp/2.1.12.png" alt="结尾图"><br><img src="https://cdn.jsdelivr.net/gh/MissingLilith/Image-Hosting-Service/yurucamp/2.1.13.png" alt="结尾图"><br><img src="https://cdn.jsdelivr.net/gh/MissingLilith/Image-Hosting-Service/yurucamp/2.1.8.png" alt="结尾图"><br><img src="https://cdn.jsdelivr.net/gh/MissingLilith/Image-Hosting-Service/yurucamp/2.1.3.png" alt="（⊙ｏ⊙）"><br><img src="https://cdn.jsdelivr.net/gh/MissingLilith/Image-Hosting-Service/yurucamp/2.1.1.png" alt="（/≧▽≦）/"><br><img src="https://cdn.jsdelivr.net/gh/MissingLilith/Image-Hosting-Service/yurucamp/2.1.5.png" alt="（lll￢ω￢）"><br><img src="https://cdn.jsdelivr.net/gh/MissingLilith/Image-Hosting-Service/yurucamp/2.1.6.png" alt="（lll￢ω￢）"><br><img src="https://cdn.jsdelivr.net/gh/MissingLilith/Image-Hosting-Service/yurucamp/2.1.7.png" alt="（lll￢ω￢）"><br><img src="https://cdn.jsdelivr.net/gh/MissingLilith/Image-Hosting-Service/yurucamp/2.1.2.png" alt="（lll￢ω￢）"><br><img src="https://cdn.jsdelivr.net/gh/MissingLilith/Image-Hosting-Service/yurucamp/2.1.4.png" alt="（（oﾟvﾟ）ノ）"></p><h2 id="这次先到这，下次再更新更多！（太可爱了AWSL——！）"><a href="#这次先到这，下次再更新更多！（太可爱了AWSL——！）" class="headerlink" title="这次先到这，下次再更新更多！（太可爱了AWSL——！）"></a>这次先到这，下次再更新更多！（太可爱了AWSL——！）</h2><p>作者：猫-ちゃん<br>出处： <a href="https://www.bilibili.com/read/cv11073485/">bilibili.com</a></p>]]></content>
      
      
      <categories>
          
          <category> 搬运 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 摇曳露营 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>My First Blog</title>
      <link href="/2021/06/08/my-first-blog/"/>
      <url>/2021/06/08/my-first-blog/</url>
      
        <content type="html"><![CDATA[<h3 id="Hi-This-is-my-first-time-to-build-a-website-blog-Hope-we-can-all-have-a-good-time-here"><a href="#Hi-This-is-my-first-time-to-build-a-website-blog-Hope-we-can-all-have-a-good-time-here" class="headerlink" title="Hi! This is my first time to build a website blog. Hope we can all have a good time here!"></a>Hi! This is my first time to build a website blog. Hope we can all have a good time here!</h3><h3 id="你好呀！2021年6月8日，我第一次搭建网站博客。希望我们都能在这玩的开心！"><a href="#你好呀！2021年6月8日，我第一次搭建网站博客。希望我们都能在这玩的开心！" class="headerlink" title="你好呀！2021年6月8日，我第一次搭建网站博客。希望我们都能在这玩的开心！"></a>你好呀！2021年6月8日，我第一次搭建网站博客。希望我们都能在这玩的开心！</h3><p>欢迎关注我的Bilibili账号： <a href="https://space.bilibili.com/17073487/">传送门</a></p><p><img src="/medias/img/20210608.jpg" alt="The Shape Of Voice"></p><p>萌新程序员，随便玩玩~~嘻嘻^_^</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2021/06/08/hello-world/"/>
      <url>/2021/06/08/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class=" language-bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class=" language-bash"><code class="language-bash">$ hexo server</code></pre><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class=" language-bash"><code class="language-bash">$ hexo generate</code></pre><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class=" language-bash"><code class="language-bash">$ hexo deploy</code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
